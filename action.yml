name: Sync Branches
description: GitHub Action to sync GitHub branch with the changes from another branch.
author: Unai Abrisketa <uabrisketa@epages.com>

inputs:
  base:
    description: Base branch
    required: true
  head:
    description: Head branch
    default: ${{ github.event.repository.default_branch }}
  title:
    description: Pull request title
  body:
    description: Pull request body
  labels:
    description: Labels to add to the pull request
  admin:
    description: Use administrator privileges to merge a pull request that does not meet requirements
  auto:
    description: Automatically merge only after necessary requirements are met
  delete_branch:
    description: Delete the local and remote branch after merge
  merge:
    description: Merge method (merge, squash, rebase)
    default: false
  github_token:
    description: GitHub token
    default: ${{ github.token }}

outputs:
  pull_request_url:
    description: Pull Request URL
    value: ${{ env.pull_request_url }}

runs:
  using: composite
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set Pull Request title and body
      id: set_pull_request_inputs
      shell: bash
      run: |-
        pull_request_title=${{ toJSON(inputs.title) }}
        if [ "$pull_request_title" == '' ]; then
          pull_request_title="Sync \`${{ inputs.base }}\` branch"
        fi
        echo "pull_request_title=$pull_request_title" >> $GITHUB_OUTPUT

        pull_request_body=${{ toJSON(inputs.body) }}
        if [ "$pull_request_body" == '' ]; then
          pull_request_body="Sync \`${{ inputs.base }}\` branch with the latest changes on \`${{ inputs.head }}\`."
        fi
        echo "pull_request_body=$pull_request_body" >> $GITHUB_OUTPUT

    - name: Check Pull Request existence
      shell: bash
      run: |-
        pull_request_url=$(
          gh pr list \
            --head ${{ inputs.head }} \
            --base ${{ inputs.base }} \
            --json url \
            --jq '.[0].url // ""'
        )
        echo "pull_request_url=$pull_request_url" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Create pull request
      if: env.pull_request_url  == ''
      continue-on-error: true
      shell: bash
      run: |-
        pull_request_url=$(
          gh pr create \
            --base ${{ inputs.base }} \
            --head ${{ inputs.head }} \
            --title '${{ steps.set_pull_request_inputs.outputs.pull_request_title }}' \
            --body '${{ steps.set_pull_request_inputs.outputs.pull_request_body }}' \
            --label '${{ inputs.labels }}'
        )
        echo "pull_request_url=$pull_request_url" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Merge pull request
      if: inputs.merge != 'false' && env.pull_request_url != ''
      shell: bash
      run: |-
        gh pr merge ${{ env.pull_request_url }} \
          ${{ inputs.admin == 'true' && '--admin' || '' }} \
          ${{ inputs.auto == 'true' && '--auto' || '' }} \
          ${{ inputs.delete_branch == 'true' && '--delete-branch' || '' }} \
          ${{ format('--{0}', inputs.merge) }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
